{"version":3,"sources":["image/logo.PNG","image sync //.(png|jpe?g|gif|svg)$","image/[600,429].jpg","image/[640,360].gif","image/advertisting[640,360].gif","image/book2[600, 452].png","image/dj[600,450].jpg","image/hatch59[640,360].gif","image/imagey[1200,533].jpg","image/landofadds[640,360].gif","image/peeps[640,360].gif","image/phone[600,589].gif","image/shot[1920,1080].jpg","image/swirl[640,360].gif","image/thevoid[640,360].gif","image/vibes[640,360].gif","photos.js","Photo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","require","imgWithClick","cursor","Photo","index","onClick","photo","margin","direction","top","left","imgStyle","position","style","event","alt","images","reduce","acc","next","replace","Photos","regx","image","url","dimensions","exec","dim","JSON","parse","img","Image","onload","height","width","src","push","SortablePhoto","SortableElement","item","SortableGallery","SortableContainer","items","photos","renderImage","props","App","useState","setItems","logo","textAlign","paddingTop","paddingBottom","fontSize","onSortEnd","oldIndex","newIndex","arrayMove","axis","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3dbbc0e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.225774b7.PNG\";","var map = {\n\t\"./[600,429].jpg\": 22,\n\t\"./[640,360].gif\": 23,\n\t\"./advertisting[640,360].gif\": 24,\n\t\"./book2[600, 452].png\": 25,\n\t\"./dj[600,450].jpg\": 26,\n\t\"./hatch59[640,360].gif\": 27,\n\t\"./imagey[1200,533].jpg\": 28,\n\t\"./landofadds[640,360].gif\": 29,\n\t\"./peeps[640,360].gif\": 30,\n\t\"./phone[600,589].gif\": 31,\n\t\"./shot[1920,1080].jpg\": 32,\n\t\"./swirl[640,360].gif\": 33,\n\t\"./thevoid[640,360].gif\": 34,\n\t\"./vibes[640,360].gif\": 35\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 21;","module.exports = __webpack_public_path__ + \"static/media/[600,429].b47ebdd8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/[640,360].c8b617ab.gif\";","module.exports = __webpack_public_path__ + \"static/media/advertisting[640,360].d2a1e996.gif\";","module.exports = __webpack_public_path__ + \"static/media/book2[600, 452].638cfc20.png\";","module.exports = __webpack_public_path__ + \"static/media/dj[600,450].e64d5494.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hatch59[640,360].7f67df81.gif\";","module.exports = __webpack_public_path__ + \"static/media/imagey[1200,533].7bba2a4c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/landofadds[640,360].cb2c637c.gif\";","module.exports = __webpack_public_path__ + \"static/media/peeps[640,360].e82ca0c2.gif\";","module.exports = __webpack_public_path__ + \"static/media/phone[600,589].ee1f5bea.gif\";","module.exports = __webpack_public_path__ + \"static/media/shot[1920,1080].76ab81a4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/swirl[640,360].387890ee.gif\";","module.exports = __webpack_public_path__ + \"static/media/thevoid[640,360].d40dae6e.gif\";","module.exports = __webpack_public_path__ + \"static/media/vibes[640,360].c86f4c1c.gif\";","import React from \"react\";\n\n\n\nconst importAll = require =>\n  require.keys().reduce((acc, next) => {\n    acc[next.replace(\"./\", \"\")] = require(next);\n    return acc;\n  }, {});\n\nexport const images = importAll(\n  require.context(\"./image\", true, /\\.(png|jpe?g|gif|svg)$/)\n);\n\nconst Photos = [];\n\nlet regx = /\\[(.*?)\\]/;\nfor (let image in images) {\n  \n  let url = images[image];\n  let dimensions = regx.exec(url)\n  \n  if (dimensions) {\n    let dim = JSON.parse(dimensions[0]);\n      let img = new Image();\n      let height;\n      let width;\n\n      img.onload = function(){\n        height = img.height;\n        width = img.width;\n        //console.log(\"[\" + width + \",\" + height  + ']');\n      }\n\n      img.src = url;\n      // // let dimensions = sizeOf();\n      // console.log(`HxW ${height}x${width}`);\n      // console.log(url);\n      Photos.push(\n        {\n          src: url,\n          width: dim[0],\n          height: dim[1]\n        }\n      )\n    }\n}\n\n\n\nexport default Photos\n\n// export const photos = [\n//   {\n//     src: \"https://source.unsplash.com/2ShvY8Lf6l0/800x599\",\n//     width: 4,\n//     height: 3\n//   },\n//   {\n//     src: \"https://source.unsplash.com/Dm-qxdynoEc/800x799\",\n//     width: 1,\n//     height: 1\n//   },\n//   {\n//     src: \"https://source.unsplash.com/qDkso9nvCg0/600x799\",\n//     width: 3,\n//     height: 4\n//   },\n//   {\n//     src: \"https://source.unsplash.com/iecJiKe_RNg/600x799\",\n//     width: 3,\n//     height: 4\n//   },\n//   {\n//     src: \"https://source.unsplash.com/epcsn8Ed8kY/600x799\",\n//     width: 3,\n//     height: 4\n//   },\n//   {\n//     src: \"https://source.unsplash.com/NQSWvyVRIJk/800x599\",\n//     width: 4,\n//     height: 3\n//   },\n//   {\n//     src: \"https://source.unsplash.com/zh7GEuORbUw/600x799\",\n//     width: 3,\n//     height: 4\n//   },\n//   {\n//     src: \"https://source.unsplash.com/PpOHJezOalU/800x599\",\n//     width: 4,\n//     height: 3\n//   },\n//   {\n//     src: \"https://source.unsplash.com/I1ASdgphUH4/800x599\",\n//     width: 4,\n//     height: 3\n//   },\n//   {\n//     src:\n//       \"https://media1.tenor.com/images/702158a9c3947532d70e083d78fcada8/tenor.gif\",\n//     width: 1,\n//     height: 1\n//   }\n// ];\n\n","import React from \"react\";\n\nconst imgWithClick = { cursor: \"pointer\" };\n\nconst Photo = ({ index, onClick, photo, margin, direction, top, left }) => {\n  const imgStyle = { margin: margin };\n  if (direction === \"column\") {\n    imgStyle.position = \"absolute\";\n    imgStyle.left = left;\n    imgStyle.top = top;\n  }\n\n  const handleClick = event => {\n    onClick(event, { photo, index });\n  };\n\n  return (\n    <img\n      style={onClick ? { ...imgStyle, ...imgWithClick } : imgStyle}\n      {...photo}\n      onClick={onClick ? handleClick : null}\n      alt=\"img\"\n    />\n  );\n};\n\nexport default Photo;\n","import React, { useState } from \"react\";\nimport { render } from \"react-dom\";\nimport Gallery from \"react-photo-gallery\";\nimport Photo from \"./Photo\";\nimport arrayMove from \"array-move\";\nimport { SortableContainer, SortableElement } from \"react-sortable-hoc\";\nimport Photos from \"./photos\";\nimport logo from './image/logo.PNG'\n\n\n/* popout the browser and maximize to see more rows! -> */\nconst SortablePhoto = SortableElement(item => <Photo {...item} />);\nconst SortableGallery = SortableContainer(({ items }) => (\n  <Gallery\n    photos={items}\n    direction={\"column\"}\n    renderImage={props => <SortablePhoto {...props} />}\n  />\n));\n\nfunction App() {\n  const [items, setItems] = useState(Photos);\n\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    setItems(arrayMove(items, oldIndex, newIndex));\n  };\n\n  return (\n    <div>\n      <div style={{}}>\n        <img style={{position:\"absolute\", left: \"2vw\", width: \"6vw\"}} src= {logo} />\n        <p style={{textAlign: \"center\", paddingTop: \"2vw\", paddingBottom: \"2vw\", fontSize: \"2.4vw\"}}>HATCH AWARDS 59</p>\n      </div>\n      <SortableGallery items={items} onSortEnd={onSortEnd} axis={\"xy\"} />\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}